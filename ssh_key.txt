Bob有两把钥匙，一把叫做公钥，一把叫做私钥。
任何人如果有需要，都可以从Bob那里获得一把公钥，但他的私钥只有他自己才有。
钥匙是用来加密信息的。
加密信息的意思是搅乱文件的内容，只有那些有正确的钥匙的人才能读取文件。
Bob的两把钥匙都可以加密信息，而另一把钥匙可以解密信息。

Susan可以用Bob的公钥来加密一条信息。Bob用他的私钥来解密信息。
Bob的任何一个同事都有可能获得Susan加密的信息，但是因为他们没有Bob的私钥，
这些加密的信息对他们没有用。

有了私钥和合适的软件，Bob可以在文件和其他数据上添加数字签名。
数字签名就像是Bob在他特有的数据上盖的一个章，是非常难以伪造的。
此外，这个签名确保了在Bob在签名之后数据的任何改动都会被发现。

签名一个文件时，Bob的软件会通过一个叫做Hash的步骤把数据压缩成几行。
这几行文字被称为消息摘要。消息摘要一经生成，是没有办法把它变回原始数据的。

接下来，Bob的软件会使用Bob的私钥来加密消息摘要，从而获得数字签名。

最后，Bob的软件把数字签名附在文件之后，所有被Hash过的数据都会被签名。

Bob现在把文件发给Pat。

首先，Pat的软件通过使用Bob的公钥来解密数字签名，把它还原成消息摘要。
如果这个步骤成功了，这就意味着Bob对这个文件签名了，因为只有Bob有私钥。
Pat的软件接下来会使用Hash把文件的数据变为消息摘要。
如果生成的消息摘要和通过解密数字签名获得的消息摘要相同，
就意味着Bob签名的文件没有被改动过。

现在情况变得复杂了，有一个叫做Doug对公司很不满，他想欺骗Pat。
Doug假借Bob的名义生成了一对公钥和私钥。
他把通过私钥加密的文件和公钥发给Pat，让Pat认为这些文件是Bob发给他的。
那么Pat怎么确定自己收到的看起来是Bob的公钥是真的呢？

碰巧Susan在公司的证书授权中心工作。Susan可以通过Bob的公钥和一些Bob的信息
制作一个数字证书。

现在Bob的同事就可以检查Bob信任的证书来确保自己手上的公钥确实是Bob的。
事实上，Bob公司的所有人都不接受那些没有Susan的证书的签名。
这样一来，一旦Bob的私钥被破坏了或者用不上了，Susan就可以取消那些证书。
Susan本身则需要从那些更为广泛接受的证书来获得授权。

假设Bob给Pat发送了一个签名了的文件。
为了验证这个文件的签名，Pat的软件首先使用Susan的公钥来检查Bob证书的签名。
如果证书解密成功，这就证明这个证书是Susan制作的。
接下来，Pat的软件就可以检查Bob是否同意证书授权以及证书中Bob的身份信息是否
被改动了。

Pat的软件接下来可以使用从证书中获得的Bob的公钥来检查Bob的签名。
如果Bob的公钥可以解密签名，Pat就可以确定签名是Bob的私钥生成的，
因为Susan已经认证了对应的公钥。
当然，如果签名是有效的，我们就知道Doug没有改动过已经签名了的文件。

这些步骤看起来很复杂，但是他们实际上都实在Pat的软件在后台完成的。
Pat只需要在签名上点一下就可以验证它了。

reference: http://www.youdzone.com/signature.html
